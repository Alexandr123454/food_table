{"version":3,"sources":["API_DATA.jsx","App.jsx","index.js"],"names":["API_DATA","id","lvl","color","API_DATA_ADD_DATA","addData","dataId","App","state","levelOfFoodsAndAddData","map","item1","find","item2","this","setState","from","marginTop","to","config","tension","props","style","className","item","React","Component","ItemList","key","backgroundColor","ListItem","clicked","handleClick","onClick","items","opacity","enter","leave","show","div","ReactDOM","render","document","getElementById"],"mappings":"4PAAaA,EAAW,CACtB,CACEC,GAAI,EACJC,IAAI,8oCACJC,MAAO,cAGT,CACEF,GAAI,EACJC,IAAI,gNACJC,MAAO,WAGT,CACEF,GAAI,EACJC,IAAI,63CACJC,MAAO,WAGT,CACEF,GAAI,EACJC,IAAI,keACJC,MAAO,WAGT,CACEF,GAAI,EACJC,IAAI,86BACJC,MAAO,YAIEC,EAAoB,CAE/B,CACEC,QAAQ,0dAERC,OAAQ,GAGV,CACED,QAAQ,0dAERC,OAAQ,GAGV,CACED,QAAQ,0dAERC,OAAQ,GAGV,CACED,QAAQ,0dAERC,OAAQ,GAGV,CACED,QAAQ,0dAERC,OAAQ,I,+OCxDNC,E,2MACJC,MAAQ,CACNC,uBAAwB,I,mFAIxB,IAAMA,EAAyBT,EAASU,KAAI,SAAAC,GAAK,O,yVAAA,IAC5CA,EAD4C,CAE/CN,QAASD,EAAkBQ,MAAK,SAAAC,GAAK,OAAIF,EAAMV,KAAOY,EAAMP,eAG9DQ,KAAKC,SAAS,CACZN,uBAAwBA,M,+BAIlB,IAAD,OACP,OAEA,kBAAC,SAAD,CACEO,KAAM,CAAEC,WAAY,KACpBC,GAAI,CAAED,UAAW,GACjBE,OAAQ,CAACC,QAAS,MAEjB,SAAAC,GAAK,OACJ,yBAAKC,MAAOD,GACV,yBAAKE,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mCAAf,+FAGE,kBAAC,EAAD,CAAUC,KAAM,EAAKhB,MAAMC,mC,GA/BzBgB,IAAMC,WA0ClBC,EAAW,SAAC,GAAD,IAAEH,EAAF,EAAEA,KAAF,OACf,6BACGA,EAAKd,KAAI,SAAAc,GAAI,OACZ,yBACEI,IAAKJ,EAAKI,IACVN,MAAO,CAACO,gBAAiBL,EAAKrB,OAC9BoB,UAAU,gBAEV,kBAAC,EAAD,CAAUC,KAAMA,UAMlBM,E,2MACJtB,MAAQ,CACNuB,SAAS,G,EAGXC,YAAc,WACZ,EAAKjB,UAAS,SAAAP,GAAK,MAAK,CACtBuB,SAAUvB,EAAMuB,a,wEAIV,IAAD,OACCP,EAASV,KAAKO,MAAdG,KACR,OACE,yBACES,QAAS,WAAO,EAAKD,gBAErB,uBAAGT,UAAU,uBAAuBC,EAAKvB,GAAzC,gDAHF,IAG4D,6BACzDuB,EAAKtB,IAJR,IAIa,6BACX,uBAAGqB,UAAU,0BAAb,oNAGA,kBAAC,aAAD,CACEW,MAAOpB,KAAKN,MAAMuB,QAClBf,KAAM,CAAEmB,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAEjB,SAAAG,GAAI,OACHA,GACC,SAAAjB,GAAK,OACJ,kBAAC,WAASkB,IAAV,CAAcjB,MAAOD,GACnB,yBAAKE,UAAU,yBACZC,EAAKnB,QAAQA,mB,GAjCToB,IAAMC,WA6CdnB,ICtGfiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.389e6237.chunk.js","sourcesContent":["export const API_DATA = [\r\n  {\r\n    id: 1,\r\n    lvl: `Морепродукты, рыба, куриная грудка, мясо индейки, мясо кролика, яйца(варенные, без желтков), молочные продукты с жирностью не более 2%, овощи, зелень, лайм, лимон, зеленый горошек, грибы, лук, чеснок, яблочный и виноградный уксус, специи.`,\r\n    color: 'lightgreen',\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    lvl: `Ягоды, фасоль, натуральные овощные соки.`, \r\n    color: '#CAE383',\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    lvl: `Куриное мясо, телятина, говядина, баранина, маслины, мясные субпродукты, орехи, семечки, мюсли, молочные продукты с жирностью от 2 до 4%, овсянка, гречка, рис, авокадо, фета, козий сыр, оливки, хлеб с отрубями, растительное масло, кисло-сладкие и кислые фрукты, вареная свекла и морковь.`,\r\n    color: '#E3D175',\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    lvl: `Натуральные фруктовые соки, йогурт, черный шоколад, плавленный сыр, твердые сорта сыра, пшено.`,\r\n    color: '#E69E1B',\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    lvl: `Манная крупа, гусятина, утятина, свинина, молочные продукты с жирностью свыше 4%, консервы, пиво, алкоголь, магазинные соки, газированные напитки, майонез, чипсы, хлеб, сладости, картофель.`,\r\n    color: '#E65D1B',\r\n  },\r\n]\r\n\r\nexport const API_DATA_ADD_DATA = [\r\n\r\n  {\r\n    addData: `На данный момент информация отсутствует, в ближейшем времени она появиться! \r\n    Хорошего дня!)`,\r\n    dataId: 1,\r\n  },\r\n\r\n  {\r\n    addData: `На данный момент информация отсутствует, в ближейшем времени она появиться! \r\n    Хорошего дня!)`,\r\n    dataId: 2,\r\n  },\r\n\r\n  {\r\n    addData: `На данный момент информация отсутствует, в ближейшем времени она появиться! \r\n    Хорошего дня!)`,\r\n    dataId: 3,\r\n  },\r\n\r\n  {\r\n    addData: `На данный момент информация отсутствует, в ближейшем времени она появиться! \r\n    Хорошего дня!)`,\r\n    dataId: 4,\r\n  },\r\n\r\n  {\r\n    addData: `На данный момент информация отсутствует, в ближейшем времени она появиться! \r\n    Хорошего дня!)`,\r\n    dataId: 5,\r\n  },\r\n]\r\n","import React from 'react';\nimport {API_DATA, API_DATA_ADD_DATA} from './API_DATA'\nimport { Spring, Transition, animated } from 'react-spring/renderprops';\nimport './App.css';\n\nclass App extends React.Component {\n  state = { \n    levelOfFoodsAndAddData: [],\n  }\n  \n  componentDidMount() {\n    const levelOfFoodsAndAddData = API_DATA.map(item1 => ({\n      ...item1,\n      addData: API_DATA_ADD_DATA.find(item2 => item1.id === item2.dataId),\n    }));\n\n    this.setState({\n      levelOfFoodsAndAddData: levelOfFoodsAndAddData,\n    });\n  }\n\n  render() {\n    return (\n\n    <Spring\n      from={{ marginTop: -5000 }}\n      to={{ marginTop: 0 }}\n      config={{tension: 80}}\n    >\n      {props => (\n        <div style={props}>\n          <div className=\"App\">\n            <div className=\"App_list\">\n              <div className=\"App_list-lvl App_list-lvl-sign \">\n                СПИСОК ПРОДУКТОВ\n              </div>\n                <ItemList item={this.state.levelOfFoodsAndAddData}/>\n            </div>\n          </div>\n        </div>\n      )}\n    </Spring>\n      \n    )\n  }\n}\n\nconst ItemList = ({item}) => (\n  <div>\n    {item.map(item => (\n      <div \n        key={item.key}\n        style={{backgroundColor: item.color}}\n        className=\"App_list-lvl\"\n      >\n        <ListItem item={item} />\n      </div>\n    ))}\n  </div>\n)\n\nclass ListItem extends React.Component {\n  state = {\n    clicked: false,\n  }\n\n  handleClick = () => {\n    this.setState(state => ({\n      clicked: !state.clicked,\n    }))\n  }\n\n  render() {\n    const { item } = this.props\n    return (\n      <div\n        onClick={() => {this.handleClick()}}\n      > \n        <b className=\"App_list-lvl-number\">{item.id}й список:</b> <br/>\n        {item.lvl} <br/> \n        <p className=\"App_list-lvl-show-info\">\n          Нажмите для более детальной информации\n        </p>\n        <Transition\n          items={this.state.clicked}\n          from={{ opacity: 0 }}\n          enter={{ opacity: 1 }}\n          leave={{ opacity: 0 }}\n        >\n          {show =>\n            show &&\n            (props => (\n              <animated.div style={props}>\n                <div className=\"App_list-lvl-add-info\">\n                  {item.addData.addData} \n                </div>\n              </animated.div>\n            ))\n          }\n        </Transition>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}